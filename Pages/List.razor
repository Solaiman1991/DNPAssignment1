@page "/List"
@using LoginExample.Data.Models
@inject IAdult AdultJSONData
@attribute [Authorize(Policy = "SecurityLevel2")]

<h3>Adult list</h3>
<p> A list of all adults </p>


<div class="text-center bg-blue-100">
    <input class="border-4 w-1/3 rounded m-6 p-6 h-8
               border-blue-300" @bind-value="searchText"@bind-value:event="oninput" placeholder="Search by firstname"/>

    <p class="text-center bg-blue-100">
        <button class="btn btn-outline-dark" type="submit">Search</button>
    </p>
</div>


@if (!AdultList.Any())
{
    <p>Loading some adults...</p>
}
else
{
    <div class="p-2 grid grid-cols-1 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3">
        @foreach (var adult in FilteredAdults)
        {
            <AdultCard AdultDetails="adult"/>
        }
    </div>
}


@foreach (var adult in FilteredAdults)
{
    <AdultCard AdultDetails="Adult"/>
}

<p>Filter by User Id: <input type="number" @oninput="@((arg) => FilterById(arg))" style="width:50px"/></p>


@if (adultsToShow == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
@if (!allAdults.Any())
{
    <p>
        <em>No adults in list.</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>FirstName</th>
            <th>LastName</th>
            <th>Sex</th>
            <th>Weight</th>
            <th>Salary</th>
            <th>EyeColor</th>
            <th>Haircolor</th>
            <th>Jobtitle</th>
            <th>Salary</th>
            <th>Action</th>
        </tr>
        </thead>

        <tbody>
        @foreach (var item in adultsToShow)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.FirstName</td>
                <td>@item.LastName</td>
                <td>@item.Height</td>
                <td>@item.Sex</td>
                <td>@item.Weight</td>
                <td>@item.EyeColor</td>
                <td>@item.HairColor</td>

                @if (item.job != null)
                {
                    <td>@item.job.JobTitle</td>
                    <td>@item.job.Salary.</td>
                }
                else
                {
                    <td>N/A</td>
                    <td>N/A"</td>
                }
                <td>
                    <AuthorizeView Policy="MustBeAdmin">
                        <a @onclick="@(() => RemoveAdult(item.Id))">
                            <i class="btn btn-warning" style="color:blue"/> Delete
                        </a>
                    </AuthorizeView>

                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private IList<Adult> adultsToShow;
    private IList<Adult> allAdults;
    private int? filterById;
    private string removeAdult;


    protected override async Task OnInitializedAsync()
    {
        allAdults = AdultJSONData.Getadults();
        adultsToShow = allAdults;
        AdultList = AdultJSONData.Getadults();

    // når jeg kører denne her metode, så får jeg en exception ?
    // await Task.Run(() => AdultJSONData.RemoveAdult(0));
    }

    // filter by id box 
    void FilterById(ChangeEventArgs args)
    {
        filterById = null;
        try
        {
            filterById = int.Parse(args.Value.ToString());
        }
        catch
            (Exception e)
        {
        }
        ExecuteFilter();
    }



}

@code {

    private string jobtitle;
    private int salary;
    private string searchText = "";


    private IList<Adult> AdultList { get; set; } = new List<Adult>();

    List<Adult> FilteredAdults => AdultList.Where(adult => adult.FirstName.ToLower().Contains(searchText.ToLower())).ToList();

    private async Task RemoveAdult(int id)
    {
        Adult adultToRemove = allAdults.First(t => t.Id == id);
        AdultJSONData.RemoveAdult(id);
        allAdults.Remove(adultToRemove);
        adultsToShow.Remove(adultToRemove);
    }

    private void ExecuteFilter()
    {
        adultsToShow = allAdults.Where(t =>
            (filterById != null && t.Id == filterById || filterById == null)
            ).ToList();
    }




}